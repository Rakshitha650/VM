name: Terraform Apply

on:
  push:
    branches:
      - main

jobs:
  terraform:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.7  # Use the correct Terraform version

      - name: Initialize Terraform
        run: terraform init

      - name: Apply Terraform Configuration
        run: terraform apply -auto-approve

      - name: Wait for Terraform Outputs
        run: sleep 30  # Gives Terraform time to update state properly

      - name: Verify Terraform Outputs
        run: |
          terraform output || echo "No outputs found!"

      - name: Fetch Instance IP
        id: get-ip
        run: |
          INSTANCE_IP=$(terraform output -raw instance_public_ip 2>/dev/null || echo "NOT_FOUND")
          if [[ "$INSTANCE_IP" == "NOT_FOUND" || -z "$INSTANCE_IP" ]]; then
            echo "❌ Failed to fetch instance IP! Check Terraform outputs."
            exit 1
          else
            echo "✅ Instance IP: $INSTANCE_IP"
            echo "INSTANCE_IP=$INSTANCE_IP" >> $GITHUB_ENV
          fi

      - name: Debug Environment Variables
        run: |
          echo "GitHub ENV INSTANCE_IP: $INSTANCE_IP"

      - name: SSH into EC2 Instance
        run: |
          ssh -o StrictHostKeyChecking=no -i mosip-qa.pem ubuntu@$INSTANCE_IP 'echo "Connected successfully!"'


      - name: Wait for EC2 Instance to be Ready
        run: |
          echo "Waiting for instance to be reachable..."
          for i in {1..10}; do
            if ssh -o StrictHostKeyChecking=no -i mosip-qa.pem ubuntu@${{ env.INSTANCE_IP }} "echo Instance is ready"; then
              echo "Instance is reachable."
              break
            fi
            echo "Retrying in 15 seconds..."
            sleep 15
          done

      - name: Setup ufw firewall
        run: |
          sudo ufw enable
          sudo ufw allow ssh
          sudo ufw allow 443/tcp
          sudo ufw allow 51820/udp
          sudo ufw status

      - name: Install WireGuard
        run: sudo apt-get install -y wireguard

      - name: Configure WireGuard
        run: |
          echo "${{ secrets.WG_CONFIG }}" | sudo tee /etc/wireguard/wg0.conf

      - name: Start WireGuard
        run: |
          sudo chmod 600 /etc/wireguard/wg0.conf
          sudo chmod 700 /etc/wireguard/
          sudo chmod 644 /lib/systemd/system/wg-quick@.service
          sudo systemctl daemon-reload
          sudo wg-quick up wg0
          sudo wg show wg0

      - name: Install Software on AWS VM
        run: |
          ssh -o StrictHostKeyChecking=no -i mosip-qa.pem ubuntu@${{ env.INSTANCE_IP }} << 'EOF'
          # Update and install required packages
          sudo apt update -y

          # Install Java JDK 11
          sudo apt install -y openjdk-11-jdk

          # Install JProfiler 13
          wget -O jprofiler.deb https://download.ej-technologies.com/jprofiler/jprofiler_linux_13_0_1.deb
          sudo dpkg -i jprofiler.deb || sudo apt-get install -f -y

          # Install VNC Server
          sudo apt install -y tightvncserver

          # Cleanup
          rm -f jprofiler.deb
          EOF
