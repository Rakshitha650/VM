name: Deploy AWS EC2 with Terraform and Install Software

on:
  push:
    branches:
      - main
  workflow_dispatch: # Allow manual trigger

permissions:
  contents: read

jobs:
  deploy:
    name: Deploy EC2 Instance
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: latest

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Initialize Terraform
        run: terraform init
        working-directory: terraform

      - name: Apply Terraform Configuration
        run: terraform apply -auto-approve
        working-directory: terraform

      - name: Get Instance Public IP
        id: get-ip
        run: |
          INSTANCE_IP=$(terraform output -raw instance_public_ip | tr -d '\n' | tr -d '\r')
          echo "Fetched Instance IP: $INSTANCE_IP"
          echo "INSTANCE_IP=$INSTANCE_IP" >> $GITHUB_ENV
        working-directory: terraform

      - name: Debug - Print Public IP
        run: |
          echo "Instance IP is: ${{ env.INSTANCE_IP }}"

      - name: Setup SSH Key
        run: |
          echo "${{ secrets.AWS_PRIVATE_KEY }}" | tr -d '\r' > mosip-qa.pem
          chmod 400 mosip-qa.pem

      - name: Wait for EC2 Instance to be Ready
        run: |
          echo "Waiting for instance to be reachable..."
          for i in {1..15}; do
            nc -z -v -w5 ${{ env.INSTANCE_IP }} 22 && break
            echo "Retrying in 10 seconds..."
            sleep 10
          done

      - name: Setup UFW Firewall
        run: |
          sudo ufw allow ssh
          sudo ufw allow 443/tcp
          sudo ufw allow 51820/udp
          sudo ufw enable
          sudo ufw status

      - name: Install WireGuard
        run: sudo apt-get install -y wireguard

      - name: Configure WireGuard
        run: echo "${{ secrets.WG_CONFIG }}" | sudo tee /etc/wireguard/wg0.conf

      - name: Start WireGuard
        run: |
          sudo chmod 600 /etc/wireguard/wg0.conf
          sudo chmod 700 /etc/wireguard/
          sudo systemctl daemon-reload
          sudo wg-quick up wg0
          sudo wg show wg0

      - name: Install Software on AWS VM
        run: |
          ssh -o StrictHostKeyChecking=no -i mosip-qa.pem ubuntu@${{ env.INSTANCE_IP }} << 'EOF'
          set -e  # Exit on error
          sudo apt update -y
          
          # Install Java JDK 11
          sudo apt install -y openjdk-11-jdk || { echo "Java install failed"; exit 1; }
          
          # Install JProfiler 13
          wget -O jprofiler.deb https://download.ej-technologies.com/jprofiler/jprofiler_linux_13_0_1.deb
          sudo dpkg -i jprofiler.deb || sudo apt-get install -f -y
          
          # Install VNC Server
          sudo apt install -y tightvncserver || { echo "VNC install failed"; exit 1; }
          
          # Cleanup
          rm -f jprofiler.deb
          EOF
